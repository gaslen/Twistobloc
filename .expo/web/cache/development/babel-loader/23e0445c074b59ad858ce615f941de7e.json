{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/gaston/Twistobloc/src/Components/Game1.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this._Settings = function () {\n      _this.props.navigation.navigate(\"Settings\");\n    };\n\n    _this._Game = function () {\n      _this.props.navigation.navigate('Game');\n    };\n\n    _this._Players = function () {\n      _this.props.navigation.navigate(\"Players\");\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.main_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.main_style,\n        onPress: function onPress() {\n          return _this2._Players();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        }\n      }, React.createElement(Text, {\n        style: styles.text_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        }\n      }, \"Joueurs\")), React.createElement(TouchableOpacity, {\n        style: styles.main_style,\n        onPress: function onPress() {\n          return _this2._Settings();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        }\n      }, React.createElement(Text, {\n        style: styles.text_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        }\n      }, \"Couleurs\")), React.createElement(TouchableOpacity, {\n        style: styles.main_style,\n        onPress: function onPress() {\n          return _this2._Game();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      }, React.createElement(Text, {\n        style: styles.text_style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }, \"Play\")));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nstyles = StyleSheet.create({\n  main_style: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  text_style: {\n    fontWeight: 'bold',\n    fontSize: 26,\n    color: '#666666',\n    fontStyle: 'italic'\n  }\n});\nexport default Main;","map":{"version":3,"sources":["/home/gaston/Twistobloc/src/Components/Game1.js"],"names":["React","Main","_Settings","props","navigation","navigate","_Game","_Players","styles","main_style","text_style","Component","StyleSheet","create","alignItems","justifyContent","flex","fontWeight","fontSize","color","fontStyle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;IAGMC,I;;;;;;;;;;;;;;;;UACJC,S,GAAY,YAAM;AAClB,YAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACC,K;;UACDC,K,GAAQ,YAAM;AACZ,YAAKH,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B;AACD,K;;UACDE,Q,GAAW,YAAM;AACf,YAAKJ,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;AACD,K;;;;;;;6BACO;AAAA;;AACN,aAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAED,MAAM,CAACC,UAAhC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACF,QAAL,EAAN;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADA,EAKE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEF,MAAM,CAACC,UAAhC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACP,SAAL,EAAN;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CALF,EASE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEF,MAAM,CAACC,UAAhC;AAA4C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,KAAL,EAAN;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CATF,CAFF;AAgBD;;;;EA3BgBV,KAAK,CAACW,S;;AA8BzBH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AACzBJ,EAAAA,UAAU,EAAE;AACVK,IAAAA,UAAU,EAAE,QADF;AAEVC,IAAAA,cAAc,EAAE,QAFN;AAGVC,IAAAA,IAAI,EAAE;AAHI,GADa;AAMzBN,EAAAA,UAAU,EAAE;AAAKO,IAAAA,UAAU,EAAE,MAAjB;AAEPC,IAAAA,QAAQ,EAAE,EAFH;AAIPC,IAAAA,KAAK,EAAE,SAJA;AAMPC,IAAAA,SAAS,EAAE;AANJ;AANa,CAAlB,CAAT;AAgBA,eAAenB,IAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, View, TextInput, Button, Text, FlatList, TouchableOpacity } from 'react-native'\n\nclass Main extends React.Component{\n  _Settings = () => {\n  this.props.navigation.navigate(\"Settings\")\n  }\n  _Game = () => {\n    this.props.navigation.navigate('Game')\n  }\n  _Players = () => {\n    this.props.navigation.navigate(\"Players\")\n  }\n  render(){\n    return(\n\n      <View style={styles.main_style} >\n      <TouchableOpacity style={styles.main_style} onPress={() => this._Players()}>\n        <Text style={styles.text_style}>Joueurs</Text>\n      </TouchableOpacity>\n\n        <TouchableOpacity style={styles.main_style} onPress={() => this._Settings()}>\n          <Text style={styles.text_style}>Couleurs</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.main_style} onPress={() => this._Game()}>\n          <Text style={styles.text_style}>Play</Text>\n        </TouchableOpacity>\n      </View>\n    )\n  }\n}\n\nstyles = StyleSheet.create({\n  main_style: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  text_style: {    fontWeight: 'bold',\n\n       fontSize: 26,\n\n       color: '#666666',\n\n       fontStyle: 'italic'}\n})\n\n\nexport default Main\n"]},"metadata":{},"sourceType":"module"}